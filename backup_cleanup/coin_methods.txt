class CoinManager:
    def __init__(self):
        self.coins_data = self.load_coins()
        
    def load_coins(self):
        """Load coins data from coins.json file"""
        try:
            with open("coins.json", "r") as f:
                return json.load(f)
        except (FileNotFoundError, json.JSONDecodeError):
            # Create default coins data if file doesn't exist or is invalid
            default_data = {
                "total_coins": 0,
                "last_updated": time.strftime("%Y-%m-%d"),
                "player_coins": {"default": 0},
                "coin_settings": {
                    "coin_value": 1,
                    "special_coin_value": 5,
                    "coin_spawn_rate": 0.05
                }
            }
            self.save_coins(default_data)
            return default_data
    
    def save_coins(self, coins_data=None):
        """Save coins data to coins.json file"""
        if coins_data is None:
            coins_data = self.coins_data
        
        # Update last_updated timestamp
        coins_data["last_updated"] = time.strftime("%Y-%m-%d")
        
        with open("coins.json", "w") as f:
            json.dump(coins_data, f, indent=2)
    
    def add_coins(self, player_name="default", amount=1):
        """Add coins to a player's total"""
        if player_name not in self.coins_data["player_coins"]:
            self.coins_data["player_coins"][player_name] = 0
        
        self.coins_data["player_coins"][player_name] += amount
        self.coins_data["total_coins"] += amount
        self.save_coins()
        
    def spend_coins(self, player_name="default", amount=1):
        """Spend coins from a player's total"""
        if player_name not in self.coins_data["player_coins"]:
            return False
        
        if self.coins_data["player_coins"][player_name] < amount:
            return False
        
        self.coins_data["player_coins"][player_name] -= amount
        self.save_coins()
        return True
    
    def get_player_coins(self, player_name="default"):
        """Get the number of coins a player has"""
        if player_name not in self.coins_data["player_coins"]:
            return 0
        return self.coins_data["player_coins"][player_name]
    
    def get_total_coins(self):
        """Get the total number of coins collected across all players"""
        return self.coins_data["total_coins"]
    
    def reset_player_coins(self, player_name="default"):
        """Reset a player's coins to 0"""
        if player_name in self.coins_data["player_coins"]:
            self.coins_data["total_coins"] -= self.coins_data["player_coins"][player_name]
            self.coins_data["player_coins"][player_name] = 0
            self.save_coins()

# Example usage:
# coin_manager = CoinManager()
# coin_manager.add_coins("player1", 5)
# player_coins = coin_manager.get_player_coins("player1")
# success = coin_manager.spend_coins("player1", 2)
